name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      prerelease:
        description: Mark the GitHub release as a pre-release
        default: false
        required: false
        type: boolean
      release_name:
        description: Optional title for the GitHub release (defaults to the tag)
        required: false
        type: string
      tag:
        description: "Tag name to build and release (for example: v0.1.0)"
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    env:
      IS_PRERELEASE: ${{ github.event_name == 'workflow_dispatch' && inputs.prerelease || 'false' }}
      RELEASE_NAME: ${{ github.event_name == 'workflow_dispatch' && (inputs.release_name != '' && inputs.release_name || inputs.tag) || github.ref_name }}
      TAG_NAME: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref_name }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Ensure tag context is available
        run: |
          if [ -z "${TAG_NAME}" ]; then
            echo "TAG_NAME is required to publish a release."
            exit 1
          fi
        shell: bash

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: |
            package-lock.json
            src/package-lock.json
          node-version: '20'

      - name: Install CLI dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: npm ci
        working-directory: src

      - name: Build frontend bundle
        run: npm run build

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - if: matrix.platform == 'ubuntu-latest'
        name: Install Linux prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Build and publish release artifacts
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: .
          prerelease: ${{ env.IS_PRERELEASE == 'true' }}
          releaseBody: |
            Automated build for ${{ env.TAG_NAME }} generated by GitHub Actions.
            Commit: ${{ github.sha }}
          releaseDraft: false
          releaseName: ${{ env.RELEASE_NAME }}
          tagName: ${{ env.TAG_NAME }}
          tauriScript: npm run tauri
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest

permissions:
  contents: write
